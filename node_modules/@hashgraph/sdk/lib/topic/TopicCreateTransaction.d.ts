/**
 * @namespace proto
 * @typedef {import("@hashgraph/proto").IConsensusCreateTopicTransactionBody} proto.IConsensusCreateTopicTransactionBody
 * @typedef {import("@hashgraph/proto").ITransaction} proto.ITransaction
 * @typedef {import("@hashgraph/proto").TransactionBody} proto.TransactionBody
 * @typedef {import("@hashgraph/proto").ITransactionBody} proto.ITransactionBody
 * @typedef {import("@hashgraph/proto").ITransactionResponse} proto.ITransactionResponse
 */
/**
 * @typedef {import("@hashgraph/cryptography").Key} Key
 * @typedef {import("../channel/Channel.js").default} Channel
 */
/**
 * Create a topic to be used for consensus.
 */
export default class TopicCreateTransaction extends Transaction {
    /**
     * @internal
     * @param {proto.TransactionBody} body
     * @returns {TopicCreateTransaction}
     */
    static _fromProtobuf(body: proto.TransactionBody): TopicCreateTransaction;
    /**
     * @param {object} props
     * @param {string} [props.topicMemo]
     * @param {Key} [props.adminKey]
     * @param {Key} [props.submitKey]
     * @param {number | Long} [props.autoRenewPeriod]
     * @param {AccountId | string} [props.autoRenewAccountId]
     */
    constructor(props?: {
        topicMemo: string | undefined;
        adminKey: import("@hashgraph/cryptography").Key | undefined;
        submitKey: import("@hashgraph/cryptography").Key | undefined;
        autoRenewPeriod: number | Long.Long | undefined;
        autoRenewAccountId: string | AccountId | undefined;
    });
    /**
     * @private
     * @type {?string}
     */
    private _topicMemo;
    /**
     * @private
     * @type {?Key}
     */
    private _adminKey;
    /**
     * @private
     * @type {?Key}
     */
    private _submitKey;
    /**
     * @private
     * @type {?AccountId}
     */
    private _autoRenewAccountId;
    /**
     * @private
     * @type {Long}
     */
    private _autoRenewPeriod;
    /**
     * @returns {?string}
     */
    get topicMemo(): string | null;
    /**
     * @param {string} topicMemo
     * @returns {this}
     */
    setTopicMemo(topicMemo: string): this;
    /**
     * @returns {?Key}
     */
    get adminKey(): import("@hashgraph/cryptography").Key | null;
    /**
     * @param {Key} adminKey
     * @returns {this}
     */
    setAdminKey(adminKey: Key): this;
    /**
     * @returns {?Key}
     */
    get submitKey(): import("@hashgraph/cryptography").Key | null;
    /**
     * @param {Key} submitKey
     * @returns {this}
     */
    setSubmitKey(submitKey: Key): this;
    /**
     * @returns {?AccountId}
     */
    get autoRenewAccountId(): AccountId | null;
    /**
     * @param {AccountId | string} autoRenewAccountId
     * @returns {this}
     */
    setAutoRenewAccountId(autoRenewAccountId: AccountId | string): this;
    /**
     * @returns {Long}
     */
    get autoRenewPeriod(): Long.Long;
    /**
     * Set the auto renew period for this account.
     *
     * @param {number | Long} autoRenewPeriod
     * @returns {this}
     */
    setAutoRenewPeriod(autoRenewPeriod: number | Long): this;
}
export type Key = import("@hashgraph/cryptography").Key;
export type Channel = import("../channel/Channel.js").default;
import Transaction from "../transaction/Transaction.js";
import AccountId from "../account/AccountId.js";
import Long from "long";
declare namespace proto {
    type IConsensusCreateTopicTransactionBody = import("@hashgraph/proto/lib/proto").proto.IConsensusCreateTopicTransactionBody;
    type ITransaction = import("@hashgraph/proto/lib/proto").proto.ITransaction;
    type TransactionBody = import("@hashgraph/proto/lib/proto").proto.TransactionBody;
    type ITransactionBody = import("@hashgraph/proto/lib/proto").proto.ITransactionBody;
    type ITransactionResponse = import("@hashgraph/proto/lib/proto").proto.ITransactionResponse;
}
export {};
