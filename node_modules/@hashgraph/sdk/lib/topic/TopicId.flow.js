/**
 * Flowtype definitions for TopicId
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.11.0
 */

/**
 * @namespace proto
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "ITopicID">} ITopicID
 */
/**
 * @typedef {$Exports<"long">} Long
 */
/**
 * Unique identifier for a topic (used by the consensus service).
 * @augments
 */
declare export default class TopicId
  mixins EntityId<$Exports<"@hashgraph/proto/lib/proto">> {
  /**
   * @param {string} text
   * @returns {TopicId}
   */
  static fromString(text: string): TopicId;

  /**
   * @param {proto.ITopicID} id
   * @returns {TopicId}
   */
  static _fromProtobuf(id: proto.ITopicID): TopicId;

  /**
   * @param {Uint8Array} bytes
   * @returns {TopicId}
   */
  static fromBytes(bytes: Uint8Array): TopicId;

  /**
   * @param {number | Long | $PropertyType<$Exports<"../EntityId.js">, "IEntityId">} props
   * @param {(number | Long)=} realm
   * @param {(number | Long)=} num
   */
  constructor(
    props:
      | number
      | Long
      | $PropertyType<$Exports<"../EntityId.js">, "IEntityId">,
    realm?: (number | Long) | void,
    num?: (number | Long) | void
  ): this;

  /**
   * @returns {Uint8Array}
   */
  toBytes(): Uint8Array;
}
export type Long = $PropertyType<$Exports<"long">, "Long">;
import EntityId from "../EntityId.js";
declare type proto_1$ITopicID = $Exports<"@hashgraph/proto/lib/proto">;
declare export {};
