/**
 * @namespace proto
 * @typedef {import("@hashgraph/proto").IConsensusDeleteTopicTransactionBody} proto.IConsensusDeleteTopicTransactionBody
 * @typedef {import("@hashgraph/proto").ITransaction} proto.ITransaction
 * @typedef {import("@hashgraph/proto").TransactionBody} proto.TransactionBody
 * @typedef {import("@hashgraph/proto").ITransactionBody} proto.ITransactionBody
 * @typedef {import("@hashgraph/proto").ITransactionResponse} proto.ITransactionResponse
 */
/**
 * @typedef {import("../channel/Channel.js").default} Channel
 */
/**
 * Delete a topic.
 *
 * No more transactions or queries on the topic will succeed.
 *
 * If an adminKey is set, this transaction must be signed by that key.
 * If there is no adminKey, this transaction will fail with Status#Unautorized.
 */
export default class TopicDeleteTransaction extends Transaction {
    /**
     * @internal
     * @param {proto.TransactionBody} body
     * @returns {TopicDeleteTransaction}
     */
    static _fromProtobuf(body: proto.TransactionBody): TopicDeleteTransaction;
    /**
     * @param {object} props
     * @param {TopicId | string} [props.topicId]
     */
    constructor(props?: {
        topicId: string | TopicId | undefined;
    });
    /**
     * @private
     * @type {?TopicId}
     */
    private _topicId;
    /**
     * @returns {?TopicId}
     */
    get topicId(): TopicId | null;
    /**
     * Set the topic ID which is being deleted in this transaction.
     *
     * @param {TopicId | string} topicId
     * @returns {TopicDeleteTransaction}
     */
    setTopicId(topicId: TopicId | string): TopicDeleteTransaction;
}
export type Channel = import("../channel/Channel.js").default;
import Transaction from "../transaction/Transaction.js";
import TopicId from "./TopicId.js";
declare namespace proto {
    type IConsensusDeleteTopicTransactionBody = import("@hashgraph/proto/lib/proto").proto.IConsensusDeleteTopicTransactionBody;
    type ITransaction = import("@hashgraph/proto/lib/proto").proto.ITransaction;
    type TransactionBody = import("@hashgraph/proto/lib/proto").proto.TransactionBody;
    type ITransactionBody = import("@hashgraph/proto/lib/proto").proto.ITransactionBody;
    type ITransactionResponse = import("@hashgraph/proto/lib/proto").proto.ITransactionResponse;
}
export {};
