/**
 * Flowtype definitions for TopicInfoQuery
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.11.0
 */

/**
 * @namespace proto
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IQuery">} IQuery
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IQueryHeader">} IQueryHeader
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IResponse">} IResponse
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IResponseHeader">} IResponseHeader
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IConsensusTopicQuery">} IConsensusTopicQuery
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IConsensusGetTopicInfoResponse">} IConsensusGetTopicInfoResponse
 */
/**
 * @typedef {$PropertyType<$Exports<"../channel/Channel.js">, "default">} Channel
 */
/**
 * Retrieve the latest state of a topic.
 * @augments
 */
declare export default class TopicInfoQuery mixins Query<TopicInfo> {
  /**
   * @internal
   * @param {proto$IQuery} query
   * @returns {TopicInfoQuery}
   */
  static _fromProtobuf(query: proto$IQuery): TopicInfoQuery;

  /**
   * @param {object} [props]
   * @param {TopicId | string} [props.topicId]
   */
  constructor(
    props?: {
      topicId?: string | TopicId | void,
      ...
    } | void
  ): this;

  /**
   * @returns {?TopicId}
   */
  topicId: TopicId | null;

  /**
   * Set the topic ID for which the info is being requested.
   * @param {TopicId | string} topicId
   * @returns {TopicInfoQuery}
   */
  setTopicId(topicId: TopicId | string): TopicInfoQuery;
}
export type Channel = $PropertyType<
  $Exports<"../channel/Channel.js">,
  "default"
>;
import TopicInfo from "./TopicInfo.js";
import Query from "../query/Query.js";
import TopicId from "./TopicId.js";
declare type proto$IQuery = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$IQueryHeader = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$IResponse = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$IResponseHeader = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$IConsensusTopicQuery = $Exports<
  "@hashgraph/proto/lib/proto"
>;

declare type proto$IConsensusGetTopicInfoResponse = $Exports<
  "@hashgraph/proto/lib/proto"
>;
declare export {};
