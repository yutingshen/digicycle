/**
 * Flowtype definitions for TopicCreateTransaction
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.11.0
 */

/**
 * @namespace proto
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IConsensusCreateTopicTransactionBody">} IConsensusCreateTopicTransactionBody
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "ITransaction">} ITransaction
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "TransactionBody">} TransactionBody
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "ITransactionBody">} ITransactionBody
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "ITransactionResponse">} ITransactionResponse
 */
/**
 * @typedef {$PropertyType<$Exports<"@hashgraph/cryptography">, "Key">} Key
 * @typedef {$PropertyType<$Exports<"../channel/Channel.js">, "default">} Channel
 */
/**
 * Create a topic to be used for consensus.
 */
declare export default class TopicCreateTransaction mixins Transaction {
  /**
   * @internal
   * @param {proto$TransactionBody} body
   * @returns {TopicCreateTransaction}
   */
  static _fromProtobuf(body: proto$TransactionBody): TopicCreateTransaction;

  /**
   * @param {object} props
   * @param {string} [props.topicMemo]
   * @param {Key} [props.adminKey]
   * @param {Key} [props.submitKey]
   * @param {number | Long} [props.autoRenewPeriod]
   * @param {AccountId | string} [props.autoRenewAccountId]
   */
  constructor(props?: {
    topicMemo: string | void,
    adminKey: $PropertyType<$Exports<"@hashgraph/cryptography">, "Key"> | void,
    submitKey: $PropertyType<$Exports<"@hashgraph/cryptography">, "Key"> | void,
    autoRenewPeriod: number | Long.Long | void,
    autoRenewAccountId: string | AccountId | void,
    ...
  }): this;

  /**
   * @returns {?string}
   */
  topicMemo: string | null;

  /**
   * @param {string} topicMemo
   * @returns {this}
   */
  setTopicMemo(topicMemo: string): this;

  /**
   * @returns {?Key}
   */
  adminKey: $PropertyType<$Exports<"@hashgraph/cryptography">, "Key"> | null;

  /**
   * @param {Key} adminKey
   * @returns {this}
   */
  setAdminKey(adminKey: Key): this;

  /**
   * @returns {?Key}
   */
  submitKey: $PropertyType<$Exports<"@hashgraph/cryptography">, "Key"> | null;

  /**
   * @param {Key} submitKey
   * @returns {this}
   */
  setSubmitKey(submitKey: Key): this;

  /**
   * @returns {?AccountId}
   */
  autoRenewAccountId: AccountId | null;

  /**
   * @param {AccountId | string} autoRenewAccountId
   * @returns {this}
   */
  setAutoRenewAccountId(autoRenewAccountId: AccountId | string): this;

  /**
   * @returns {Long}
   */
  autoRenewPeriod: Long.Long;

  /**
   * Set the auto renew period for this account.
   * @param {number | Long} autoRenewPeriod
   * @returns {this}
   */
  setAutoRenewPeriod(autoRenewPeriod: number | Long): this;
}
export type Key = $PropertyType<$Exports<"@hashgraph/cryptography">, "Key">;
export type Channel = $PropertyType<
  $Exports<"../channel/Channel.js">,
  "default"
>;
import Transaction from "../transaction/Transaction.js";
import AccountId from "../account/AccountId.js";
import Long from "long";
declare type proto$IConsensusCreateTopicTransactionBody = $Exports<
  "@hashgraph/proto/lib/proto"
>;

declare type proto$ITransaction = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$TransactionBody = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$ITransactionBody = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$ITransactionResponse = $Exports<
  "@hashgraph/proto/lib/proto"
>;
declare export {};
