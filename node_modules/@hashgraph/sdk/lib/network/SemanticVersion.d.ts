/**
 * @namespace proto
 * @typedef {import("@hashgraph/proto").ISemanticVersion} proto.ISemanticVersion
 */
export default class SemanticVersion {
    /**
     * @internal
     * @param {proto.ISemanticVersion} version
     * @returns {SemanticVersion}
     */
    static _fromProtobuf(version: proto.ISemanticVersion): SemanticVersion;
    /**
     * @private
     * @param {object} proto
     * @param {number} proto.major
     * @param {number} proto.minor
     * @param {number} proto.patch
     */
    private constructor();
    /** @readonly */
    readonly major: number;
    /** @readonly */
    readonly minor: number;
    /** @readonly */
    readonly patch: number;
    /**
     * @internal
     * @returns {proto.ISemanticVersion}
     */
    _toProtobuf(): proto.ISemanticVersion;
}
declare namespace proto {
    type ISemanticVersion = import("@hashgraph/proto/lib/proto").proto.ISemanticVersion;
}
export {};
