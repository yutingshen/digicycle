/**
 * @namespace proto
 * @typedef {import("@hashgraph/proto").ITokenRelationship} proto.ITokenRelationship
 * @typedef {import("@hashgraph/proto").ITokenID} proto.ITokenID
 */
/**
 * @typedef {import("long")} Long
 */
export default class TokenRelationshipMap {
    /**
     * @param {proto.ITokenRelationship[]} relationships
     * @returns {TokenRelationshipMap}
     */
    static _fromProtobuf(relationships: proto.ITokenRelationship[]): TokenRelationshipMap;
    /**
     * @param {Map<string, TokenRelationship>} relationships
     */
    constructor(relationships: Map<string, TokenRelationship>);
    _relationships: Map<string, TokenRelationship>;
    /**
     * @param {TokenId} tokenId
     * @returns {?TokenRelationship}
     */
    get(tokenId: TokenId): TokenRelationship | null;
    /**
     * @returns {IterableIterator<TokenRelationship>}
     */
    values(): IterableIterator<TokenRelationship>;
    /**
     * @returns {IterableIterator<TokenId>}
     */
    keys(): IterableIterator<TokenId>;
    /**
     * @returns {IterableIterator<[TokenId, TokenRelationship]>}
     */
    [Symbol.iterator](): IterableIterator<[TokenId, TokenRelationship]>;
}
export type Long = import("long").Long;
import TokenRelationship from "./TokenRelationship.js";
import TokenId from "../token/TokenId.js";
declare namespace proto {
    type ITokenRelationship = import("@hashgraph/proto/lib/proto").proto.ITokenRelationship;
    type ITokenID = import("@hashgraph/proto/lib/proto").proto.ITokenID;
}
export {};
