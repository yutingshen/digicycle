/**
 * Flowtype definitions for LiveHashDeleteTransaction
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.11.0
 */

/**
 * @namespace proto
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "ITransaction">} ITransaction
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "TransactionBody">} TransactionBody
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "ITransactionBody">} ITransactionBody
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "ITransactionResponse">} ITransactionResponse
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "ICryptoDeleteLiveHashTransactionBody">} ICryptoDeleteLiveHashTransactionBody
 */
/**
 * @typedef {$PropertyType<$Exports<"@hashgraph/cryptography">, "Key">} Key
 * @typedef {$PropertyType<$Exports<"../channel/Channel.js">, "default">} Channel
 */
declare export default class LiveHashDeleteTransaction mixins Transaction {
  /**
   * @internal
   * @param {proto$TransactionBody} body
   * @returns {LiveHashDeleteTransaction}
   */
  static _fromProtobuf(body: proto$TransactionBody): LiveHashDeleteTransaction;

  /**
   * @param {object} [props]
   * @param {Uint8Array} [props.hash]
   * @param {Key[]} [props.keys]
   * @param {number | Long} [props.duration]
   * @param {AccountId | string} [props.accountId]
   */
  constructor(
    props?: {
      hash?: Uint8Array | void,
      keys?: $PropertyType<$Exports<"@hashgraph/cryptography">, "Key">[] | void,
      duration?: number | $PropertyType<$Exports<"long">, "Long"> | void,
      accountId?: string | AccountId | void,
      ...
    } | void
  ): this;

  /**
   * @returns {?Uint8Array}
   */
  hash: Uint8Array | null;

  /**
   * @param {Uint8Array} hash
   * @returns {LiveHashDeleteTransaction}
   */
  setHash(hash: Uint8Array): LiveHashDeleteTransaction;

  /**
   * @returns {?AccountId}
   */
  accountId: AccountId | null;

  /**
   * @param {AccountId | string} accountId
   * @returns {LiveHashDeleteTransaction}
   */
  setAccountId(accountId: AccountId | string): LiveHashDeleteTransaction;
}
export type Key = $PropertyType<$Exports<"@hashgraph/cryptography">, "Key">;
export type Channel = $PropertyType<
  $Exports<"../channel/Channel.js">,
  "default"
>;
import Transaction from "../transaction/Transaction.js";
import AccountId from "./AccountId.js";
declare type proto$ITransaction = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$TransactionBody = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$ITransactionBody = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$ITransactionResponse = $Exports<
  "@hashgraph/proto/lib/proto"
>;

declare type proto$ICryptoDeleteLiveHashTransactionBody = $Exports<
  "@hashgraph/proto/lib/proto"
>;
declare export {};
