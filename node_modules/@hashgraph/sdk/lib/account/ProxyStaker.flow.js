/**
 * Flowtype definitions for ProxyStaker
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.11.0
 */

/**
 * @namespace proto
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IProxyStaker">} IProxyStaker
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IAccountID">} IAccountID
 */
/**
 * @typedef {$PropertyType<$Exports<"bignumber.js">, "default">} BigNumber
 */
/**
 * An account, and the amount that it sends or receives during a cryptocurrency transfer.
 */
declare export default class ProxyStaker {
  /**
   * @internal
   * @param {proto$IProxyStaker} transfer
   * @returns {ProxyStaker}
   */
  static _fromProtobuf(transfer: proto$IProxyStaker): ProxyStaker;

  /**
 * @private
 * @param {object} props
 * @param {AccountId} props.accountId
 * @param {number
| string
| Long
| BigNumber
| Hbar} props.amount
 */
  constructor(): this;

  /**
   * The Account ID that sends or receives cryptocurrency.
   * @readonly
   */
  +accountId: AccountId;

  /**
   * The amount of tinybars that the account sends(negative)
   * or receives(positive).
   * @readonly
   */
  +amount: Hbar;

  /**
   * @internal
   * @returns {proto$IProxyStaker}
   */
  _toProtobuf(): proto$IProxyStaker;
}
export type BigNumber = $PropertyType<$Exports<"bignumber.js">, "default">;
import AccountId from "./AccountId.js";
import Hbar from "../Hbar.js";
declare type proto$IProxyStaker = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$IAccountID = $Exports<"@hashgraph/proto/lib/proto">;
declare export {};
