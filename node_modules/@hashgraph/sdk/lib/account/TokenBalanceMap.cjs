"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _TokenId = _interopRequireDefault(require("../token/TokenId.cjs"));

var _long = _interopRequireDefault(require("long"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @namespace proto
 * @typedef {import("@hashgraph/proto").ITokenBalance} proto.ITokenBalance
 * @typedef {import("@hashgraph/proto").ITokenID} proto.ITokenID
 */
class TokenBalanceMap {
  /**
   * @param {Map<string, Long>} balances
   */
  constructor(balances) {
    this._balances = balances;
  }
  /**
   * @param {TokenId} tokenId
   * @returns {?Long}
   */


  get(tokenId) {
    const token = new _TokenId.default(tokenId).toString();
    return this._balances.get(token) || null;
  }
  /**
   * @returns {IterableIterator<Long>}
   */


  values() {
    return this._balances.values();
  }
  /**
   * @returns {IterableIterator<TokenId>}
   */


  keys() {
    const keys = [];

    for (const key of this._balances.keys()) {
      keys.push(_TokenId.default.fromString(key));
    }

    return keys[Symbol.iterator]();
  }
  /**
   * @returns {IterableIterator<[TokenId, Long]>}
   */


  [Symbol.iterator]() {
    /**
     * @type {Map<TokenId, Long>}
     */
    const map = new Map();

    for (const [key, value] of this._balances) {
      map.set(_TokenId.default.fromString(key), value);
    }

    return (
      /**@type {IterableIterator<[TokenId, Long]>} */
      map[Symbol.iterator]()
    );
  }
  /**
   * @param {proto.ITokenBalance[]} balances
   * @returns {TokenBalanceMap}
   */


  static _fromProtobuf(balances) {
    const tokenBalances = new Map();

    for (const balance of balances) {
      const tokenId = _TokenId.default._fromProtobuf(
      /** @type {proto.ITokenID} */
      balance.tokenId);

      tokenBalances.set(tokenId.toString(), _long.default.fromValue(
      /** @type {Long} */
      balance.balance));
    }

    return new TokenBalanceMap(tokenBalances);
  }

}

exports.default = TokenBalanceMap;