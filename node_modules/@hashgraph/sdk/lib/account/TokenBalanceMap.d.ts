/**
 * @namespace proto
 * @typedef {import("@hashgraph/proto").ITokenBalance} proto.ITokenBalance
 * @typedef {import("@hashgraph/proto").ITokenID} proto.ITokenID
 */
export default class TokenBalanceMap {
    /**
     * @param {proto.ITokenBalance[]} balances
     * @returns {TokenBalanceMap}
     */
    static _fromProtobuf(balances: proto.ITokenBalance[]): TokenBalanceMap;
    /**
     * @param {Map<string, Long>} balances
     */
    constructor(balances: Map<string, Long>);
    _balances: Map<string, Long.Long>;
    /**
     * @param {TokenId} tokenId
     * @returns {?Long}
     */
    get(tokenId: TokenId): Long | null;
    /**
     * @returns {IterableIterator<Long>}
     */
    values(): IterableIterator<Long>;
    /**
     * @returns {IterableIterator<TokenId>}
     */
    keys(): IterableIterator<TokenId>;
    /**
     * @returns {IterableIterator<[TokenId, Long]>}
     */
    [Symbol.iterator](): IterableIterator<[TokenId, Long]>;
}
import Long from "long";
import TokenId from "../token/TokenId.js";
declare namespace proto {
    type ITokenBalance = import("@hashgraph/proto/lib/proto").proto.ITokenBalance;
    type ITokenID = import("@hashgraph/proto/lib/proto").proto.ITokenID;
}
export {};
