/**
 * Flowtype definitions for TokenRelationshipMap
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.11.0
 */

/**
 * @namespace proto
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "ITokenRelationship">} ITokenRelationship
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "ITokenID">} ITokenID
 */
/**
 * @typedef {$Exports<"long">} Long
 */
declare export default class TokenRelationshipMap {
  /**
   * @param {proto$ITokenRelationship[]} relationships
   * @returns {TokenRelationshipMap}
   */
  static _fromProtobuf(
    relationships: proto$ITokenRelationship[]
  ): TokenRelationshipMap;

  /**
   * @param {Map<string, TokenRelationship>} relationships
   */
  constructor(relationships: Map<string, TokenRelationship>): this;
  _relationships: Map<string, TokenRelationship>;

  /**
   * @param {TokenId} tokenId
   * @returns {?TokenRelationship}
   */
  get(tokenId: TokenId): TokenRelationship | null;

  /**
   * @returns {IterableIterator<TokenRelationship>}
   */
  values(): IterableIterator<TokenRelationship>;

  /**
   * @returns {IterableIterator<TokenId>}
   */
  keys(): IterableIterator<TokenId>;

  /**
   * @returns {IterableIterator<[TokenId, TokenRelationship]>}
   */
  @@iterator: () => IterableIterator<[TokenId, TokenRelationship]>;
}
export type Long = $PropertyType<$Exports<"long">, "Long">;
import TokenRelationship from "./TokenRelationship.js";
import TokenId from "../token/TokenId.js";
declare type proto$ITokenRelationship = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$ITokenID = $Exports<"@hashgraph/proto/lib/proto">;
declare export {};
