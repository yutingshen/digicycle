/**
 * Flowtype definitions for TokenRelationship
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.11.0
 */

/**
 * @namespace proto
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "ITokenRelationship">} ITokenRelationship
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "TokenKycStatus">} TokenKycStatus
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "TokenFreezeStatus">} TokenFreezeStatus
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "ITokenID">} ITokenID
 */
/**
 * Token's information related to the given Account
 */
declare export default class TokenRelationship {
  /**
   * @param {proto$ITokenRelationship} relationship
   * @returns {TokenRelationship}
   */
  static _fromProtobuf(
    relationship: proto$ITokenRelationship
  ): TokenRelationship;

  /**
   * @param {object} props
   * @param {TokenId} props.tokenId
   * @param {string} props.symbol
   * @param {Long} props.balance
   * @param {boolean | null} props.kycStatus
   * @param {boolean | null} props.freezeStatus
   */
  constructor(props: {
    tokenId: TokenId,
    symbol: string,
    balance: Long,
    kycStatus: boolean | null,
    freezeStatus: boolean | null,
    ...
  }): this;

  /**
   * The ID of the token
   * @readonly
   */
  +tokenId: TokenId;

  /**
   * The Symbol of the token
   * @readonly
   */
  +symbol: string;

  /**
   * The balance that the Account holds in the smallest denomination
   * @readonly
   */
  +balance: Long.Long;

  /**
   * The KYC status of the account (KycNotApplicable, Granted or Revoked). If the token does
   * not have KYC key, KycNotApplicable is returned
   * @readonly
   */
  +kycStatus: boolean | null;

  /**
   * The Freeze status of the account (FreezeNotApplicable, Frozen or Unfrozen). If the token
   * does not have Freeze key, FreezeNotApplicable is returned
   * @readonly
   */
  +freezeStatus: boolean | null;
}
import TokenId from "../token/TokenId.js";
import Long from "long";
declare type proto$ITokenRelationship = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$TokenKycStatus = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$TokenFreezeStatus = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$ITokenID = $Exports<"@hashgraph/proto/lib/proto">;
declare export {};
