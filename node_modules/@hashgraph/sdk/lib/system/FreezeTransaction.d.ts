/**
 * @namespace proto
 * @typedef {import("@hashgraph/proto").ITransaction} proto.ITransaction
 * @typedef {import("@hashgraph/proto").TransactionBody} proto.TransactionBody
 * @typedef {import("@hashgraph/proto").ITransactionBody} proto.ITransactionBody
 * @typedef {import("@hashgraph/proto").ITransactionResponse} proto.ITransactionResponse
 * @typedef {import("@hashgraph/proto").IFreezeTransactionBody} proto.IFreezeTransactionBody
 */
/**
 * @typedef {import("../channel/Channel.js").default} Channel
 */
/**
 * @typedef {object} HourMinute
 * @property {number} hour
 * @property {number} minute
 */
export default class FreezeTransaction extends Transaction {
    /**
     * @internal
     * @param {proto.TransactionBody} body
     * @returns {FreezeTransaction}
     */
    static _fromProtobuf(body: proto.TransactionBody): FreezeTransaction;
    /**
     * @param {Object} [props]
     * @param {HourMinute} [props.startTime]
     * @param {HourMinute} [props.endTime]
     */
    constructor(props?: {
        startTime?: HourMinute | undefined;
        endTime?: HourMinute | undefined;
    } | undefined);
    /**
     * @private
     * @type {?HourMinute}
     */
    private _startTime;
    /**
     * @private
     * @type {?HourMinute}
     */
    private _endTime;
    /**
     * @returns {?HourMinute}
     */
    get startTime(): HourMinute | null;
    /**
     * @param {number} startHour
     * @param {number} startMinute
     * @returns {FreezeTransaction}
     */
    setStartTime(startHour: number, startMinute: number): FreezeTransaction;
    /**
     * @returns {?HourMinute}
     */
    get endTime(): HourMinute | null;
    /**
     * @param {number} endHour
     * @param {number} endMinute
     * @returns {FreezeTransaction}
     */
    setEndTime(endHour: number, endMinute: number): FreezeTransaction;
    /**
     * @override
     * @protected
     * @param {Channel} channel
     * @returns {(transaction: proto.ITransaction) => Promise<proto.ITransactionResponse>}
     */
    protected _getMethod(channel: Channel): (transaction: proto.ITransaction) => Promise<proto.ITransactionResponse>;
}
export type Channel = import("../channel/Channel.js").default;
export type HourMinute = {
    hour: number;
    minute: number;
};
import Transaction from "../transaction/Transaction.js";
declare namespace proto {
    type ITransaction = import("@hashgraph/proto/lib/proto").proto.ITransaction;
    type TransactionBody = import("@hashgraph/proto/lib/proto").proto.TransactionBody;
    type ITransactionBody = import("@hashgraph/proto/lib/proto").proto.ITransactionBody;
    type ITransactionResponse = import("@hashgraph/proto/lib/proto").proto.ITransactionResponse;
    type IFreezeTransactionBody = import("@hashgraph/proto/lib/proto").proto.IFreezeTransactionBody;
}
export {};
