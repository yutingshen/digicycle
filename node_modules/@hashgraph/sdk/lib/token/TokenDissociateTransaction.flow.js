/**
 * Flowtype definitions for TokenDissociateTransaction
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.11.0
 */

import { SingleTransactionBuilder } from "../TransactionBuilder";
import { Transaction } from "../generated/Transaction_pb";
import { TransactionResponse } from "../generated/TransactionResponse_pb";
import { grpc } from "@improbable-eng/grpc-web";
import { TokenIdLike } from "./TokenId";
import { AccountIdLike } from "../account/AccountId";
declare var UnaryMethodDefinition: typeof grpc.UnaryMethodDefinition;
/**
 * Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key.
 * If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.
 * If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.
 * If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.
 * If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.
 * If an association between the provided account and any of the tokens does not exist, the transaction will resolve to
 * TOKEN_NOT_DISSOCIATED_TO_ACCOUNT.
 * If the provided account has a nonzero balance with any of the provided tokens, the transaction will resolve to
 * TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES.
 * On success, associations between the provided account and tokens are removed.
 */
declare export class TokenDissociateTransaction
  mixins SingleTransactionBuilder {
  constructor(): this;

  /**
   * The account to be dissociated with the provided tokens
   */
  setAccountId(id: AccountIdLike): this;

  /**
   * The tokens to be dissociated with the provided account
   */
  addTokenId(id: TokenIdLike): this;
  _method: UnaryMethodDefinition<Transaction, TransactionResponse>;
  _doValidate(_: string[]): void;
}
