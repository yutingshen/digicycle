import { SingleTransactionBuilder } from "../TransactionBuilder";
import { Transaction } from "../generated/Transaction_pb";
import { TransactionResponse } from "../generated/TransactionResponse_pb";
import { grpc } from "@improbable-eng/grpc-web";
import { TokenIdLike } from "./TokenId";
import { AccountIdLike } from "../account/AccountId";
import UnaryMethodDefinition = grpc.UnaryMethodDefinition;
import BigNumber from "bignumber.js";
export declare class TokenWipeTransaction extends SingleTransactionBuilder {
    private _body;
    constructor();
    /**
     * The token for which the account will be wiped. If token does not exist, transaction results in INVALID_TOKEN_ID
     */
    setTokenId(id: TokenIdLike): this;
    /**
     * The account to be wiped
     */
    setAccountId(id: AccountIdLike): this;
    /**
     * The amount of tokens to wipe from the specified account. Amount must be a positive non-zero number in the lowest
     * denomination possible, not bigger than the token balance of the account (0; balance]
     */
    setAmount(amount: BigNumber | number): this;
    protected get _method(): UnaryMethodDefinition<Transaction, TransactionResponse>;
    protected _doValidate(_: string[]): void;
}
