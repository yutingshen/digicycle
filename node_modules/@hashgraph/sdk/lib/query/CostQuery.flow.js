/**
 * Flowtype definitions for CostQuery
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.11.0
 */

/**
 * @namespace proto
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IQuery">} IQuery
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IResponse">} IResponse
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IQueryHeader">} IQueryHeader
 */
/**
 * @typedef {$PropertyType<$Exports<"../channel/Channel.js">, "default">} Channel
 * @typedef {$PropertyType<$Exports<"../Status.js">, "default">} Status
 */
/**
 * @template
 * @augments
 */
declare export default class CostQuery<OutputT>
  mixins Executable<
      $Exports<"@hashgraph/proto/lib/proto">,
      $Exports<"@hashgraph/proto/lib/proto">,
      Hbar
    > {
  /**
   * @param {$PropertyType<$Exports<"./Query.js">, "default">} query
   */
  constructor(query: $PropertyType<$Exports<"./Query.js">, "default">): this;
  _query: $PropertyType<$Exports<"./Query.js">, "default">;

  /**
   * @type {proto.IQueryHeader | null}
   */
  _header: proto.IQueryHeader | null;
  _nextIndex: number;
}
export type Channel = $PropertyType<
  $Exports<"../channel/Channel.js">,
  "default"
>;
export type Status = $PropertyType<$Exports<"../Status.js">, "default">;
import Hbar from "../Hbar.js";
import Executable from "../Executable.js";
declare type proto_1$IQuery = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto_1$IResponse = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto_1$IQueryHeader = $Exports<"@hashgraph/proto/lib/proto">;
declare export {};
