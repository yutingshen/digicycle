/**
 * Flowtype definitions for NodeClient
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.11.0
 */

declare var Network: typeof npm$namespace$Network;

declare var npm$namespace$Network: {|
  fromName: typeof Network$fromName,
  MAINNET: typeof Network$MAINNET,
  TESTNET: typeof Network$TESTNET,
  PREVIEWNET: typeof Network$PREVIEWNET,
|};

/**
 * @param {string} name
 * @returns {{
[key: string]: (string | AccountId),...
}}
 */
declare function Network$fromName(
  name: string
): {
  [key: string]: string | AccountId,
  ...
};

/**
 * @param {string} name
 * @returns {{
[key: string]: (string | AccountId),...
}}
 */
declare function Network$fromName(
  name: string
): {
  [key: string]: string | AccountId,
  ...
};

declare var Network$MAINNET: {
  "35.237.200.180:50211": AccountId,
  "35.186.191.247:50211": AccountId,
  "35.192.2.25:50211": AccountId,
  "35.199.161.108:50211": AccountId,
  "35.203.82.240:50211": AccountId,
  "35.236.5.219:50211": AccountId,
  "35.197.192.225:50211": AccountId,
  "35.242.233.154:50211": AccountId,
  "35.240.118.96:50211": AccountId,
  "35.204.86.32:50211": AccountId,
  ...
};

declare var Network$TESTNET: {
  "0.testnet.hedera.com:50211": AccountId,
  "1.testnet.hedera.com:50211": AccountId,
  "2.testnet.hedera.com:50211": AccountId,
  "3.testnet.hedera.com:50211": AccountId,
  ...
};

declare var Network$PREVIEWNET: {
  "0.previewnet.hedera.com:50211": AccountId,
  "1.previewnet.hedera.com:50211": AccountId,
  "2.previewnet.hedera.com:50211": AccountId,
  "3.previewnet.hedera.com:50211": AccountId,
  ...
};
declare var MirrorNetwork: typeof npm$namespace$MirrorNetwork;

declare var npm$namespace$MirrorNetwork: {|
  fromName: typeof MirrorNetwork$fromName,
  MAINNET_1: typeof MirrorNetwork$MAINNET_1,
  TESTNET_1: typeof MirrorNetwork$TESTNET_1,
  PREVIEWNET_1: typeof MirrorNetwork$PREVIEWNET_1,
|};

/**
 * @param {string} name
 * @returns {string[]}
 */
declare export function MirrorNetwork$fromName(name: string): string[];

/**
 * @param {string} name
 * @returns {string[]}
 */
declare export function MirrorNetwork$fromName(name: string): string[];

declare var MAINNET_1: string[];

declare export { MAINNET_1 as MAINNET };

declare var TESTNET_1: string[];

declare export { TESTNET_1 as TESTNET };

declare var PREVIEWNET_1: string[];

declare export { PREVIEWNET_1 as PREVIEWNET };

/**
 * @augments
 */
declare export default class NodeClient mixins Client<NodeChannel, any> {
  /**
   * @param {string | ClientConfiguration} data
   * @returns {NodeClient}
   */
  static fromConfig(data: string | ClientConfiguration): NodeClient;

  /**
   * @param {string} filename
   * @returns {Promise<NodeClient>}
   */
  static fromConfigFile(filename: string): Promise<NodeClient>;

  /**
 * Construct a client for a specific network.
 * 
 * It is the responsibility of the caller to ensure that all nodes in the map are part of the
 * same Hedera network. Failure to do so will result in undefined behavior.
 * 
 * The client will load balance all requests to Hedera using a simple round-robin scheme to
 * chose nodes to send transactions to. For one transaction, at most 1/3 of the nodes will be
 * tried.
 * @param {{
[key: string]: (string | AccountId),...
}} network
 * @returns {NodeClient}
 */
  static forNetwork(network: {
    [key: string]: string | AccountId,
    ...
  }): NodeClient;

  /**
   * Construct a Hedera client pre-configured for Mainnet access.
   * @returns {NodeClient}
   */
  static forMainnet(): NodeClient;

  /**
   * Construct a Hedera client pre-configured for Testnet access.
   * @returns {NodeClient}
   */
  static forTestnet(): NodeClient;

  /**
   * Construct a Hedera client pre-configured for Previewnet access.
   * @returns {NodeClient}
   */
  static forPreviewnet(): NodeClient;

  /**
   * @param {ClientConfiguration} [props]
   */
  constructor(
    props?: $PropertyType<$Exports<"./Client.js">, "ClientConfiguration"> | void
  ): this;
}
export type ClientConfiguration = {
  network:
    | {
        [key: string]: string | AccountId,
        ...
      }
    | "mainnet"
    | "testnet"
    | "previewnet",
  mirrorNetwork?: string | string[] | void,
  operator?: $PropertyType<$Exports<"./Client.js">, "Operator"> | void,
  ...
};
import AccountId from "../account/AccountId.js";
import NodeChannel from "../channel/NodeChannel.js";
import Client from "./Client.js";
