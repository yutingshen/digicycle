/**
 * Flowtype definitions for TransactionReceipt
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.11.0
 */

import { TransactionReceipt as ProtoTransactionReceipt } from "./generated/TransactionReceipt_pb";
import { AccountId } from "./account/AccountId";
import { ConsensusTopicId } from "./consensus/ConsensusTopicId";
import { ContractId } from "./contract/ContractId";
import { FileId } from "./file/FileId";
import { TokenId } from "./token/TokenId";
import { Status } from "./Status";

/**
 * The consensus result for a transaction, which might not be currently known,
 * or may  succeed or fail.
 */
declare export class TransactionReceipt {
  /**
   * Whether the transaction succeeded or failed (or is unknown).
   */
  +status: Status;
  constructor(): this;

  /**
   * @deprecated
   */
  accountId: AccountId;

  /**
   * The account ID, if a new account was created.
   */
  getAccountId(): AccountId;

  /**
   * @deprecated
   */
  fileId: FileId;

  /**
   * The file ID, if a new file was created.
   */
  getFileId(): FileId;

  /**
   * @deprecated
   */
  contractId: ContractId;

  /**
   * The contract ID, if a new smart contract instance was created.
   */
  getContractId(): ContractId;

  /**
   * TopicID of a newly created consensus service topic.
   */
  getConsensusTopicId(): ConsensusTopicId;

  /**
   * @deprecated `TransactionReceipt.getTopicId()` is deprecrated. Use `TransactionReceipt.getConsensusTopicId()` instead.
   */
  getTopicId(): ConsensusTopicId;

  /**
   * The token ID, if a new token was created.
   */
  getTokenId(): TokenId;

  /**
   * Updated running hash for a consensus service topic. The result of a ConsensusSubmitMessage.
   */
  getConsensusTopicRunningHash(): Uint8Array;

  /**
   * Updated sequence number for a consensus service topic. The result of a ConsensusSubmitMessage.
   */
  getConsensusTopicSequenceNumber(): number;
  toJSON(): { [key: string]: any };
  toString(): string;
  static _fromProto(receipt: ProtoTransactionReceipt): TransactionReceipt;
}
