/**
 * @namespace proto
 * @typedef {import("@hashgraph/proto").IQuery} proto.IQuery
 * @typedef {import("@hashgraph/proto").IQueryHeader} proto.IQueryHeader
 * @typedef {import("@hashgraph/proto").ITransactionRecord} proto.ITransactionRecord
 * @typedef {import("@hashgraph/proto").ITransactionReceipt} proto.ITransactionReceipt
 * @typedef {import("@hashgraph/proto").ITransactionGetRecordResponse} proto.ITransactionGetRecordResponse
 * @typedef {import("@hashgraph/proto").ITransactionGetRecordQuery} proto.ITransactionGetRecordQuery
 * @typedef {import("@hashgraph/proto").IResponse} proto.IResponse
 * @typedef {import("@hashgraph/proto").IResponseHeader} proto.IResponseHeader
 * @typedef {import("@hashgraph/proto").ResponseCodeEnum} proto.ResponseCodeEnum
 */
/**
 * @typedef {import("../channel/Channel.js").default} Channel
 */
/**
 * @augments {Query<TransactionRecord>}
 */
export default class TransactionRecordQuery extends Query<TransactionRecord> {
    /**
     * @internal
     * @param {proto.IQuery} query
     * @returns {TransactionRecordQuery}
     */
    static _fromProtobuf(query: proto.IQuery): TransactionRecordQuery;
    /**
     * @param {object} [props]
     * @param {TransactionId} [props.transactionId]
     */
    constructor(props?: {
        transactionId?: TransactionId | undefined;
    } | undefined);
    /**
     * @private
     * @type {?TransactionId}
     */
    private _transactionId;
    /**
     * @returns {?TransactionId}
     */
    get transactionId(): TransactionId | null;
    /**
     * Set the transaction ID for which the record is being requested.
     *
     * @param {TransactionId} transactionId
     * @returns {TransactionRecordQuery}
     */
    setTransactionId(transactionId: TransactionId): TransactionRecordQuery;
}
export type Channel = import("../channel/Channel.js").default;
import TransactionRecord from "./TransactionRecord.js";
import Query from "../query/Query.js";
import TransactionId from "./TransactionId.js";
declare namespace proto {
    type IQuery = import("@hashgraph/proto/lib/proto").proto.IQuery;
    type IQueryHeader = import("@hashgraph/proto/lib/proto").proto.IQueryHeader;
    type ITransactionRecord = import("@hashgraph/proto/lib/proto").proto.ITransactionRecord;
    type ITransactionReceipt = import("@hashgraph/proto/lib/proto").proto.ITransactionReceipt;
    type ITransactionGetRecordResponse = import("@hashgraph/proto/lib/proto").proto.ITransactionGetRecordResponse;
    type ITransactionGetRecordQuery = import("@hashgraph/proto/lib/proto").proto.ITransactionGetRecordQuery;
    type IResponse = import("@hashgraph/proto/lib/proto").proto.IResponse;
    type IResponseHeader = import("@hashgraph/proto/lib/proto").proto.IResponseHeader;
    type ResponseCodeEnum = import("@hashgraph/proto/lib/proto").proto.ResponseCodeEnum;
}
export {};
