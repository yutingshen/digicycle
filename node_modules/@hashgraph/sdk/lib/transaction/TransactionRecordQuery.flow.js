/**
 * Flowtype definitions for TransactionRecordQuery
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.11.0
 */

/**
 * @namespace proto
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IQuery">} IQuery
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IQueryHeader">} IQueryHeader
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "ITransactionRecord">} ITransactionRecord
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "ITransactionReceipt">} ITransactionReceipt
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "ITransactionGetRecordResponse">} ITransactionGetRecordResponse
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "ITransactionGetRecordQuery">} ITransactionGetRecordQuery
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IResponse">} IResponse
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IResponseHeader">} IResponseHeader
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "ResponseCodeEnum">} ResponseCodeEnum
 */
/**
 * @typedef {$PropertyType<$Exports<"../channel/Channel.js">, "default">} Channel
 */
/**
 * @augments
 */
declare export default class TransactionRecordQuery
  mixins Query<TransactionRecord> {
  /**
   * @internal
   * @param {proto$IQuery} query
   * @returns {TransactionRecordQuery}
   */
  static _fromProtobuf(query: proto$IQuery): TransactionRecordQuery;

  /**
   * @param {object} [props]
   * @param {TransactionId} [props.transactionId]
   */
  constructor(
    props?: {
      transactionId?: TransactionId | void,
      ...
    } | void
  ): this;

  /**
   * @returns {?TransactionId}
   */
  transactionId: TransactionId | null;

  /**
   * Set the transaction ID for which the record is being requested.
   * @param {TransactionId} transactionId
   * @returns {TransactionRecordQuery}
   */
  setTransactionId(transactionId: TransactionId): TransactionRecordQuery;
}
export type Channel = $PropertyType<
  $Exports<"../channel/Channel.js">,
  "default"
>;
import TransactionRecord from "./TransactionRecord.js";
import Query from "../query/Query.js";
import TransactionId from "./TransactionId.js";
declare type proto$IQuery = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$IQueryHeader = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$ITransactionRecord = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$ITransactionReceipt = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$ITransactionGetRecordResponse = $Exports<
  "@hashgraph/proto/lib/proto"
>;

declare type proto$ITransactionGetRecordQuery = $Exports<
  "@hashgraph/proto/lib/proto"
>;

declare type proto$IResponse = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$IResponseHeader = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$ResponseCodeEnum = $Exports<"@hashgraph/proto/lib/proto">;
declare export {};
