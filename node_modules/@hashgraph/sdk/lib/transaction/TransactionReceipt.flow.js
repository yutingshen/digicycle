/**
 * Flowtype definitions for TransactionReceipt
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.11.0
 */

/**
 * @namespace proto
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "ITransactionReceipt">} ITransactionReceipt
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IExchangeRateSet">} IExchangeRateSet
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IExchangeRate">} IExchangeRate
 */
/**
 * The consensus result for a transaction, which might not be currently known,
 * or may succeed or fail.
 */
declare export default class TransactionReceipt {
  /**
   * @internal
   * @param {proto$ITransactionReceipt} receipt
   * @returns {TransactionReceipt}
   */
  static _fromProtobuf(receipt: proto$ITransactionReceipt): TransactionReceipt;

  /**
   * @private
   * @param {object} props
   * @param {Status} props.status
   * @param {?AccountId} props.accountId
   * @param {?FileId} props.fileId
   * @param {?ContractId} props.contractId
   * @param {?TopicId} props.topicId
   * @param {?TokenId} props.tokenId
   * @param {?ExchangeRate} props.exchangeRate
   * @param {?Long} props.topicSequenceNumber
   * @param {?Uint8Array} props.topicRunningHash
   */
  constructor(): this;

  /**
   * Whether the transaction succeeded or failed (or is unknown).
   * @readonly
   */
  +status: Status;

  /**
   * The account ID, if a new account was created.
   * @readonly
   */
  +accountId: AccountId | null;

  /**
   * The file ID, if a new file was created.
   * @readonly
   */
  +fileId: FileId | null;

  /**
   * The contract ID, if a new contract was created.
   * @readonly
   */
  +contractId: ContractId | null;

  /**
   * The topic ID, if a new topic was created.
   * @readonly
   */
  +topicId: TopicId | null;

  /**
   * The token ID, if a new token was created.
   * @readonly
   */
  +tokenId: TokenId | null;

  /**
   * The exchange rate of Hbars to cents (USD).
   * @readonly
   */
  +exchangeRate: ExchangeRate | null;

  /**
   * Updated sequence number for a consensus service topic.
   * @readonly
   */
  +topicSequenceNumber: Long.Long | null;

  /**
   * Updated running hash for a consensus service topic.
   * @readonly
   */
  +topicRunningHash: Uint8Array | null;

  /**
   * @internal
   * @returns {proto$ITransactionReceipt}
   */
  _toProtobuf(): proto$ITransactionReceipt;
}
import Status from "../Status.js";
import AccountId from "../account/AccountId.js";
import FileId from "../file/FileId.js";
import ContractId from "../contract/ContractId.js";
import TopicId from "../topic/TopicId.js";
import TokenId from "../token/TokenId.js";
import ExchangeRate from "../ExchangeRate.js";
import Long from "long";
declare type proto$ITransactionReceipt = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$IExchangeRateSet = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$IExchangeRate = $Exports<"@hashgraph/proto/lib/proto">;
declare export {};
