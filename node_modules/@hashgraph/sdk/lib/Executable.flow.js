/**
 * Flowtype definitions for Executable
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.11.0
 */

/**
 * @abstract
 * @internal
 * @template
 * @template
 * @template
 */
declare export default class Executable<RequestT, ResponseT, OutputT> {
  /**
   * @abstract
   * @protected
   * @param {$PropertyType<$Exports<"./client/Client.js">, "default">} client
   * @returns {Promise<void>}
   */
  _beforeExecute(
    client: $PropertyType<$Exports<"./client/Client.js">, "default">
  ): Promise<void>;

  /**
   * @abstract
   * @protected
   * @returns {RequestT}
   */
  _makeRequest(): RequestT;

  /**
   * @abstract
   * @internal
   * @param {ResponseT} response
   * @returns {Status}
   */
  _mapResponseStatus(response: ResponseT): Status;

  /**
   * @abstract
   * @protected
   * @param {ResponseT} response
   * @param {AccountId} nodeAccountId
   * @param {RequestT} request
   * @returns {Promise<OutputT>}
   */
  _mapResponse(
    response: ResponseT,
    nodeAccountId: AccountId,
    request: RequestT
  ): Promise<OutputT>;

  /**
   * @abstract
   * @internal
   * @param {Channel} channel
   * @param {RequestT} request
   * @returns {Promise<ResponseT>}
   */
  _execute(channel: Channel, request: RequestT): Promise<ResponseT>;

  /**
   * @abstract
   * @protected
   * @template
   * @template
   * @param {?$PropertyType<$Exports<"./client/Client.js">, "default">} client
   * @returns {AccountId}
   */
  _getNodeAccountId<ChannelT, MirrorChannelT>(
    client: $PropertyType<$Exports<"./client/Client.js">, "default"> | null
  ): AccountId;

  /**
   * @abstract
   * @protected
   * @returns {TransactionId}
   */
  _getTransactionId(): TransactionId;

  /**
   * @abstract
   * @protected
   * @returns {void}
   */
  _advanceRequest(): void;

  /**
   * @abstract
   * @protected
   * @param {Status} responseStatus
   * @param {ResponseT} response
   * @returns {boolean}
   */
  _shouldRetry(responseStatus: Status, response: ResponseT): boolean;

  /**
   * @abstract
   * @protected
   * @param {GrpcServiceError} error
   * @returns {boolean}
   */
  _shouldRetryExceptionally(error: GrpcServiceError): boolean;

  /**
   * @template
   * @template
   * @param {$PropertyType<$Exports<"./client/Client.js">, "default">} client
   * @returns {Promise<OutputT>}
   */
  execute<
    ChannelT_1: $PropertyType<$Exports<"./channel/Channel.js">, "default">,
    MirrorChannelT_1
  >(
    client: $PropertyType<$Exports<"./client/Client.js">, "default">
  ): Promise<OutputT>;
}
export type AccountId = $PropertyType<
  $Exports<"./account/AccountId.js">,
  "default"
>;
export type Channel = $PropertyType<
  $Exports<"./channel/Channel.js">,
  "default"
>;
export type TransactionId = $PropertyType<
  $Exports<"./transaction/TransactionId.js">,
  "default"
>;
import Status from "./Status.js";
import GrpcServiceError from "./grpc/GrpcServiceError.js";
