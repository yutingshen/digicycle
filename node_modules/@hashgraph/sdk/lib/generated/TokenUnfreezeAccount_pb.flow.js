/**
 * Flowtype definitions for TokenUnfreezeAccount_pb
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.11.0
 */

import * as jspb from "google-protobuf";
import * as BasicTypes_pb from "./BasicTypes_pb";
declare export class TokenUnfreezeAccountTransactionBody mixins jspb.Message {
  hasToken(): boolean;
  clearToken(): void;
  getToken(): BasicTypes_pb.TokenID | void;
  setToken(value?: BasicTypes_pb.TokenID): void;
  hasAccount(): boolean;
  clearAccount(): void;
  getAccount(): BasicTypes_pb.AccountID | void;
  setAccount(value?: BasicTypes_pb.AccountID): void;
  serializeBinary(): Uint8Array;
  toObject(
    includeInstance?: boolean
  ): TokenUnfreezeAccountTransactionBody$AsObject;
  static toObject(
    includeInstance: boolean,
    msg: TokenUnfreezeAccountTransactionBody
  ): TokenUnfreezeAccountTransactionBody$AsObject;
  static extensions: {
    [key: number]: jspb.ExtensionFieldInfo<jspb.Message>,
    ...
  };
  static extensionsBinary: {
    [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>,
    ...
  };
  static serializeBinaryToWriter(
    message: TokenUnfreezeAccountTransactionBody,
    writer: jspb.BinaryWriter
  ): void;
  static deserializeBinary(
    bytes: Uint8Array
  ): TokenUnfreezeAccountTransactionBody;
  static deserializeBinaryFromReader(
    message: TokenUnfreezeAccountTransactionBody,
    reader: jspb.BinaryReader
  ): TokenUnfreezeAccountTransactionBody;
}
export type TokenUnfreezeAccountTransactionBody$AsObject = {
  token?: BasicTypes_pb.TokenID.AsObject,
  account?: BasicTypes_pb.AccountID.AsObject,
  ...
};
