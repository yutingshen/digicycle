/**
 * Flowtype definitions for TransactionGetReceipt_pb
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.11.0
 */

import * as jspb from "google-protobuf";
import * as TransactionReceipt_pb from "./TransactionReceipt_pb";
import * as BasicTypes_pb from "./BasicTypes_pb";
import * as QueryHeader_pb from "./QueryHeader_pb";
import * as ResponseHeader_pb from "./ResponseHeader_pb";
declare export class TransactionGetReceiptQuery mixins jspb.Message {
  hasHeader(): boolean;
  clearHeader(): void;
  getHeader(): QueryHeader_pb.QueryHeader | void;
  setHeader(value?: QueryHeader_pb.QueryHeader): void;
  hasTransactionid(): boolean;
  clearTransactionid(): void;
  getTransactionid(): BasicTypes_pb.TransactionID | void;
  setTransactionid(value?: BasicTypes_pb.TransactionID): void;
  getIncludeduplicates(): boolean;
  setIncludeduplicates(value: boolean): void;
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): TransactionGetReceiptQuery$AsObject;
  static toObject(
    includeInstance: boolean,
    msg: TransactionGetReceiptQuery
  ): TransactionGetReceiptQuery$AsObject;
  static extensions: {
    [key: number]: jspb.ExtensionFieldInfo<jspb.Message>,
    ...
  };
  static extensionsBinary: {
    [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>,
    ...
  };
  static serializeBinaryToWriter(
    message: TransactionGetReceiptQuery,
    writer: jspb.BinaryWriter
  ): void;
  static deserializeBinary(bytes: Uint8Array): TransactionGetReceiptQuery;
  static deserializeBinaryFromReader(
    message: TransactionGetReceiptQuery,
    reader: jspb.BinaryReader
  ): TransactionGetReceiptQuery;
}
export type TransactionGetReceiptQuery$AsObject = {
  header?: QueryHeader_pb.QueryHeader.AsObject,
  transactionid?: BasicTypes_pb.TransactionID.AsObject,
  includeduplicates: boolean,
  ...
};
declare export class TransactionGetReceiptResponse mixins jspb.Message {
  hasHeader(): boolean;
  clearHeader(): void;
  getHeader(): ResponseHeader_pb.ResponseHeader | void;
  setHeader(value?: ResponseHeader_pb.ResponseHeader): void;
  hasReceipt(): boolean;
  clearReceipt(): void;
  getReceipt(): TransactionReceipt_pb.TransactionReceipt | void;
  setReceipt(value?: TransactionReceipt_pb.TransactionReceipt): void;
  clearDuplicatetransactionreceiptsList(): void;
  getDuplicatetransactionreceiptsList(): Array<TransactionReceipt_pb.TransactionReceipt>;
  setDuplicatetransactionreceiptsList(
    value: Array<TransactionReceipt_pb.TransactionReceipt>
  ): void;
  addDuplicatetransactionreceipts(
    value?: TransactionReceipt_pb.TransactionReceipt,
    index?: number
  ): TransactionReceipt_pb.TransactionReceipt;
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): TransactionGetReceiptResponse$AsObject;
  static toObject(
    includeInstance: boolean,
    msg: TransactionGetReceiptResponse
  ): TransactionGetReceiptResponse$AsObject;
  static extensions: {
    [key: number]: jspb.ExtensionFieldInfo<jspb.Message>,
    ...
  };
  static extensionsBinary: {
    [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>,
    ...
  };
  static serializeBinaryToWriter(
    message: TransactionGetReceiptResponse,
    writer: jspb.BinaryWriter
  ): void;
  static deserializeBinary(bytes: Uint8Array): TransactionGetReceiptResponse;
  static deserializeBinaryFromReader(
    message: TransactionGetReceiptResponse,
    reader: jspb.BinaryReader
  ): TransactionGetReceiptResponse;
}
export type TransactionGetReceiptResponse$AsObject = {
  header?: ResponseHeader_pb.ResponseHeader.AsObject,
  receipt?: TransactionReceipt_pb.TransactionReceipt.AsObject,
  duplicatetransactionreceiptsList: Array<TransactionReceipt_pb.TransactionReceipt.AsObject>,
  ...
};
