// package: proto
// file: TokenGetInfo.proto

import * as jspb from "google-protobuf";
import * as BasicTypes_pb from "./BasicTypes_pb";
import * as QueryHeader_pb from "./QueryHeader_pb";
import * as ResponseHeader_pb from "./ResponseHeader_pb";

export class TokenGetInfoQuery extends jspb.Message {
  hasHeader(): boolean;
  clearHeader(): void;
  getHeader(): QueryHeader_pb.QueryHeader | undefined;
  setHeader(value?: QueryHeader_pb.QueryHeader): void;

  hasToken(): boolean;
  clearToken(): void;
  getToken(): BasicTypes_pb.TokenID | undefined;
  setToken(value?: BasicTypes_pb.TokenID): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): TokenGetInfoQuery.AsObject;
  static toObject(includeInstance: boolean, msg: TokenGetInfoQuery): TokenGetInfoQuery.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: TokenGetInfoQuery, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): TokenGetInfoQuery;
  static deserializeBinaryFromReader(message: TokenGetInfoQuery, reader: jspb.BinaryReader): TokenGetInfoQuery;
}

export namespace TokenGetInfoQuery {
  export type AsObject = {
    header?: QueryHeader_pb.QueryHeader.AsObject,
    token?: BasicTypes_pb.TokenID.AsObject,
  }
}

export class TokenInfo extends jspb.Message {
  hasTokenid(): boolean;
  clearTokenid(): void;
  getTokenid(): BasicTypes_pb.TokenID | undefined;
  setTokenid(value?: BasicTypes_pb.TokenID): void;

  getName(): string;
  setName(value: string): void;

  getSymbol(): string;
  setSymbol(value: string): void;

  getDecimals(): number;
  setDecimals(value: number): void;

  getTotalsupply(): number;
  setTotalsupply(value: number): void;

  hasTreasury(): boolean;
  clearTreasury(): void;
  getTreasury(): BasicTypes_pb.AccountID | undefined;
  setTreasury(value?: BasicTypes_pb.AccountID): void;

  hasAdminkey(): boolean;
  clearAdminkey(): void;
  getAdminkey(): BasicTypes_pb.Key | undefined;
  setAdminkey(value?: BasicTypes_pb.Key): void;

  hasKyckey(): boolean;
  clearKyckey(): void;
  getKyckey(): BasicTypes_pb.Key | undefined;
  setKyckey(value?: BasicTypes_pb.Key): void;

  hasFreezekey(): boolean;
  clearFreezekey(): void;
  getFreezekey(): BasicTypes_pb.Key | undefined;
  setFreezekey(value?: BasicTypes_pb.Key): void;

  hasWipekey(): boolean;
  clearWipekey(): void;
  getWipekey(): BasicTypes_pb.Key | undefined;
  setWipekey(value?: BasicTypes_pb.Key): void;

  hasSupplykey(): boolean;
  clearSupplykey(): void;
  getSupplykey(): BasicTypes_pb.Key | undefined;
  setSupplykey(value?: BasicTypes_pb.Key): void;

  getDefaultfreezestatus(): BasicTypes_pb.TokenFreezeStatusMap[keyof BasicTypes_pb.TokenFreezeStatusMap];
  setDefaultfreezestatus(value: BasicTypes_pb.TokenFreezeStatusMap[keyof BasicTypes_pb.TokenFreezeStatusMap]): void;

  getDefaultkycstatus(): BasicTypes_pb.TokenKycStatusMap[keyof BasicTypes_pb.TokenKycStatusMap];
  setDefaultkycstatus(value: BasicTypes_pb.TokenKycStatusMap[keyof BasicTypes_pb.TokenKycStatusMap]): void;

  getIsdeleted(): boolean;
  setIsdeleted(value: boolean): void;

  hasAutorenewaccount(): boolean;
  clearAutorenewaccount(): void;
  getAutorenewaccount(): BasicTypes_pb.AccountID | undefined;
  setAutorenewaccount(value?: BasicTypes_pb.AccountID): void;

  getAutorenewperiod(): number;
  setAutorenewperiod(value: number): void;

  getExpiry(): number;
  setExpiry(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): TokenInfo.AsObject;
  static toObject(includeInstance: boolean, msg: TokenInfo): TokenInfo.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: TokenInfo, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): TokenInfo;
  static deserializeBinaryFromReader(message: TokenInfo, reader: jspb.BinaryReader): TokenInfo;
}

export namespace TokenInfo {
  export type AsObject = {
    tokenid?: BasicTypes_pb.TokenID.AsObject,
    name: string,
    symbol: string,
    decimals: number,
    totalsupply: number,
    treasury?: BasicTypes_pb.AccountID.AsObject,
    adminkey?: BasicTypes_pb.Key.AsObject,
    kyckey?: BasicTypes_pb.Key.AsObject,
    freezekey?: BasicTypes_pb.Key.AsObject,
    wipekey?: BasicTypes_pb.Key.AsObject,
    supplykey?: BasicTypes_pb.Key.AsObject,
    defaultfreezestatus: BasicTypes_pb.TokenFreezeStatusMap[keyof BasicTypes_pb.TokenFreezeStatusMap],
    defaultkycstatus: BasicTypes_pb.TokenKycStatusMap[keyof BasicTypes_pb.TokenKycStatusMap],
    isdeleted: boolean,
    autorenewaccount?: BasicTypes_pb.AccountID.AsObject,
    autorenewperiod: number,
    expiry: number,
  }
}

export class TokenGetInfoResponse extends jspb.Message {
  hasHeader(): boolean;
  clearHeader(): void;
  getHeader(): ResponseHeader_pb.ResponseHeader | undefined;
  setHeader(value?: ResponseHeader_pb.ResponseHeader): void;

  hasTokeninfo(): boolean;
  clearTokeninfo(): void;
  getTokeninfo(): TokenInfo | undefined;
  setTokeninfo(value?: TokenInfo): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): TokenGetInfoResponse.AsObject;
  static toObject(includeInstance: boolean, msg: TokenGetInfoResponse): TokenGetInfoResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: TokenGetInfoResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): TokenGetInfoResponse;
  static deserializeBinaryFromReader(message: TokenGetInfoResponse, reader: jspb.BinaryReader): TokenGetInfoResponse;
}

export namespace TokenGetInfoResponse {
  export type AsObject = {
    header?: ResponseHeader_pb.ResponseHeader.AsObject,
    tokeninfo?: TokenInfo.AsObject,
  }
}

