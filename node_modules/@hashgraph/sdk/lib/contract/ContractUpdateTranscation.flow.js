/**
 * Flowtype definitions for ContractUpdateTranscation
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.11.0
 */

/**
 * @namespace proto
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "ITransaction">} ITransaction
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "TransactionBody">} TransactionBody
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "ITransactionBody">} ITransactionBody
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "ITransactionResponse">} ITransactionResponse
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IContractUpdateTransactionBody">} IContractUpdateTransactionBody
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IAccountID">} IAccountID
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IContractID">} IContractID
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IFileID">} IFileID
 */
/**
 * @typedef {$PropertyType<$Exports<"@hashgraph/cryptography">, "Key">} Key
 * @typedef {$PropertyType<$Exports<"../channel/Channel.js">, "default">} Channel
 */
declare export default class ContractUpdateTransaction mixins Transaction {
  /**
   * @internal
   * @param {proto$TransactionBody} body
   * @returns {ContractUpdateTransaction}
   */
  static _fromProtobuf(body: proto$TransactionBody): ContractUpdateTransaction;

  /**
   * @param {object} props
   * @param {ContractId | string} [props.contractId]
   * @param {FileId | string} [props.bytecodeFileId]
   * @param {Timestamp} [props.expirationTime]
   * @param {Key} [props.adminKey]
   * @param {AccountId | string} [props.proxyAccountId]
   * @param {number | Long} [props.autoRenewPeriod]
   * @param {string} [props.contractMemo]
   */
  constructor(props?: {
    contractId: string | ContractId | void,
    bytecodeFileId: string | FileId | void,
    expirationTime: Timestamp | void,
    adminKey: $PropertyType<$Exports<"@hashgraph/cryptography">, "Key"> | void,
    proxyAccountId: string | AccountId | void,
    autoRenewPeriod: number | Long.Long | void,
    contractMemo: string | void,
    ...
  }): this;

  /**
   * @returns {?ContractId}
   */
  contractId: ContractId | null;

  /**
   * Sets the contract ID which is being deleted in this transaction.
   * @param {ContractId | string} contractId
   * @returns {ContractUpdateTransaction}
   */
  setContractId(contractId: ContractId | string): ContractUpdateTransaction;

  /**
   * @returns {?Timestamp}
   */
  expirationTime: Timestamp | null;

  /**
   * Sets the contract ID which is being deleted in this transaction.
   * @param {Timestamp} expirationTime
   * @returns {ContractUpdateTransaction}
   */
  setExpirationTime(expirationTime: Timestamp): ContractUpdateTransaction;

  /**
   * @returns {?Key}
   */
  adminKey: $PropertyType<$Exports<"@hashgraph/cryptography">, "Key"> | null;

  /**
   * @param {Key} adminKey
   * @returns {this}
   */
  setAdminKey(adminKey: Key): this;

  /**
   * @returns {?AccountId}
   */
  proxyAccountId: AccountId | null;

  /**
   * @param {AccountId | string} proxyAccountId
   * @returns {this}
   */
  setProxyAccountId(proxyAccountId: AccountId | string): this;

  /**
   * @returns {?Long}
   */
  autoRenewPeriod: Long.Long | null;

  /**
   * @param {number | Long} autoRenewPeriod
   * @returns {this}
   */
  setAutoRenewPeriod(autoRenewPeriod: number | Long): this;

  /**
   * @returns {?FileId}
   */
  bytecodeFileId: FileId | null;

  /**
   * @param {FileId | string} bytecodeFileId
   * @returns {this}
   */
  setBytecodeFileId(bytecodeFileId: FileId | string): this;

  /**
   * @returns {?string}
   */
  contractMemo: string | null;

  /**
   * @param {string} contractMemo
   * @returns {this}
   */
  setContractMemo(contractMemo: string): this;
}
export type Key = $PropertyType<$Exports<"@hashgraph/cryptography">, "Key">;
export type Channel = $PropertyType<
  $Exports<"../channel/Channel.js">,
  "default"
>;
import Transaction from "../transaction/Transaction.js";
import ContractId from "./ContractId.js";
import Timestamp from "../Timestamp.js";
import AccountId from "../account/AccountId.js";
import Long from "long";
import FileId from "../file/FileId.js";
declare type proto$ITransaction = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$TransactionBody = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$ITransactionBody = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$ITransactionResponse = $Exports<
  "@hashgraph/proto/lib/proto"
>;

declare type proto$IContractUpdateTransactionBody = $Exports<
  "@hashgraph/proto/lib/proto"
>;

declare type proto$IAccountID = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$IContractID = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$IFileID = $Exports<"@hashgraph/proto/lib/proto">;
declare export {};
