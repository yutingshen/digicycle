/**
 * Flowtype definitions for Channel
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.11.0
 */

/**
 * @internal
 * @abstract
 */
declare export default class Channel {
  /**
   * @protected
   * @type {?CryptoService}
   */
  _crypto: CryptoService | null;

  /**
   * @protected
   * @type {?SmartContractService}
   */
  _smartContract: SmartContractService | null;

  /**
   * @protected
   * @type {?FileService}
   */
  _file: FileService | null;

  /**
   * @protected
   * @type {?ConsensusService}
   */
  _consensus: ConsensusService | null;

  /**
   * @protected
   * @type {?FreezeService}
   */
  _freeze: FreezeService | null;

  /**
   * @protected
   * @type {?NetworkService}
   */
  _network: NetworkService | null;

  /**
   * @protected
   * @type {?TokenService}
   */
  _token: TokenService | null;

  /**
   * @abstract
   * @returns {void}
   */
  close(): void;

  /**
   * @returns {CryptoService}
   */
  crypto: CryptoService;

  /**
   * @returns {SmartContractService}
   */
  smartContract: SmartContractService;

  /**
   * @returns {FileService}
   */
  file: FileService;

  /**
   * @returns {ConsensusService}
   */
  consensus: ConsensusService;

  /**
   * @returns {FreezeService}
   */
  freeze: FreezeService;

  /**
   * @returns {NetworkService}
   */
  network: NetworkService;

  /**
   * @returns {TokenService}
   */
  token: TokenService;

  /**
   * @abstract
   * @protected
   * @param {string} serviceName
   * @returns {$PropertyType<$Exports<"protobufjs">, "RPCImpl">}
   */
  _createUnaryClient(
    serviceName: string
  ): $PropertyType<$Exports<"protobufjs">, "RPCImpl">;
}
import { CryptoService } from "@hashgraph/proto";
import { SmartContractService } from "@hashgraph/proto";
import { FileService } from "@hashgraph/proto";
import { ConsensusService } from "@hashgraph/proto";
import { FreezeService } from "@hashgraph/proto";
import { NetworkService } from "@hashgraph/proto";
import { TokenService } from "@hashgraph/proto";
